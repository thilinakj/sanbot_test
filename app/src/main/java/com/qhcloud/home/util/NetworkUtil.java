package com.qhcloud.home.util;import android.app.Activity;import android.content.ComponentName;import android.content.Context;import android.content.Intent;import android.net.ConnectivityManager;import android.net.NetworkInfo;import android.telephony.TelephonyManager;import android.text.TextUtils;public class NetworkUtil {    public static final String NETWORK_TYPE_WIFI = "wifi";    public static final String NETWORK_TYPE_3G = "eg";    public static final String NETWORK_TYPE_2G = "2g";    public static final String NETWORK_TYPE_WAP = "wap";    public static final String NETWORK_TYPE_UNKNOWN = "unknown";    public static final String NETWORK_TYPE_DISCONNECT = "disconnect";    /**     * Get network type     *     * @param context     * @return     */    public static int getNetworkType(Context context) {        ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);        NetworkInfo networkInfo = connectivityManager == null ? null : connectivityManager.getActiveNetworkInfo();        return networkInfo == null ? -1 : networkInfo.getType();    }    /**     * Get network type name     *     * @param context     * @return     */    public static String getNetworkTypeName(Context context) {        ConnectivityManager manager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);        NetworkInfo networkInfo;        String type = NETWORK_TYPE_DISCONNECT;        if (manager == null || (networkInfo = manager.getActiveNetworkInfo()) == null) {            return type;        }        if (networkInfo.isConnected()) {            String typeName = networkInfo.getTypeName();            if ("WIFI".equalsIgnoreCase(typeName)) {                type = NETWORK_TYPE_WIFI;            } else if ("MOBILE".equalsIgnoreCase(typeName)) {                String proxyHost = android.net.Proxy.getDefaultHost();                type = TextUtils.isEmpty(proxyHost) ? (isFastMobileNetwork(context) ? NETWORK_TYPE_3G : NETWORK_TYPE_2G)                        : NETWORK_TYPE_WAP;            } else {                type = NETWORK_TYPE_UNKNOWN;            }        }        return type;    }    /**     * Whether is fast mobile network     *     * @param context     * @return     */    private static boolean isFastMobileNetwork(Context context) {        TelephonyManager telephonyManager = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);        if (telephonyManager == null) {            return false;        }        switch (telephonyManager.getNetworkType()) {            case TelephonyManager.NETWORK_TYPE_1xRTT:                return false;            case TelephonyManager.NETWORK_TYPE_CDMA:                return false;            case TelephonyManager.NETWORK_TYPE_EDGE:                return false;            case TelephonyManager.NETWORK_TYPE_EVDO_0:                return true;            case TelephonyManager.NETWORK_TYPE_EVDO_A:                return true;            case TelephonyManager.NETWORK_TYPE_GPRS:                return false;            case TelephonyManager.NETWORK_TYPE_HSDPA:                return true;            case TelephonyManager.NETWORK_TYPE_HSPA:                return true;            case TelephonyManager.NETWORK_TYPE_HSUPA:                return true;            case TelephonyManager.NETWORK_TYPE_UMTS:                return true;            case TelephonyManager.NETWORK_TYPE_EHRPD:                return true;            case TelephonyManager.NETWORK_TYPE_EVDO_B:                return true;            case TelephonyManager.NETWORK_TYPE_HSPAP:                return true;            case TelephonyManager.NETWORK_TYPE_IDEN:                return false;            case TelephonyManager.NETWORK_TYPE_LTE:                return true;            case TelephonyManager.NETWORK_TYPE_UNKNOWN:                return false;            default:                return false;        }    }    /**     * 判断网络是否连接     */    public static boolean isConnected(Context context) {        ConnectivityManager connectivity = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);        if (null != connectivity) {            NetworkInfo info = connectivity.getActiveNetworkInfo();            return info.getState() == NetworkInfo.State.CONNECTED;        }        return false;    }    /**     * 判断是否是wifi连接     */    public static boolean isWifi(Context context) {        ConnectivityManager connectivity = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);        return connectivity != null && connectivity.getActiveNetworkInfo().getType() == ConnectivityManager.TYPE_WIFI;    }    /**     * 打开网络设置界面     */    public static void openSetting(Activity activity) {        Intent intent = new Intent("/");        ComponentName componentName = new ComponentName("com.android.settings", "com.android.settings.WirelessSettings");        intent.setComponent(componentName);        intent.setAction("android.intent.action.VIEW");        activity.startActivityForResult(intent, 0);    }}